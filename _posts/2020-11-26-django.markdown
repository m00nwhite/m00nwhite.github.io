---
layout: post
title:  "Django笔记：开发环境及常用命令"
date:   2020-11-26 04:17:36 +0800
categories: web python django
---

# 1.Pycharm搭建开发环境
pycharm 中新建工程，选择Existing interpreter。
![](http://yinyang.space/img/20201126_django1.png)


如果没有Django环境，Pycharm会自动下载安装：
![](http://yinyang.space/img/20201126_django2.png)

设置一下项目的interpreter，如果设置过了可省略
![](http://yinyang.space/img/20201126_django3.png)


运行/调试配置，勾选run browser选项：
![](http://yinyang.space/img/20201126_django5.png)


点击Pycharm右上角的运行按钮，或者使用快捷键<kbd>Control</kbd> + <kbd>R</kbd> 运行项目，正常就可以看到下面的厨师画面了：
![](http://yinyang.space/img/20201126_django6.png)


如果出现了下面的错误，在settings.py文件中加上`import os`就可以了
![](http://yinyang.space/img/20201126_django4.png)

# 2. 常用命令

```bash
# 新建项目
django-admin startproject [项目名称]
django-admin startproject djproject

# 新建应用
django-admin.py startapp [应用名称]   
# 或者
python manage.py startapp [应用名称]

# 运行项目
python manage.py runserver localhost:8000
# 这里如果需要使项目在本机意外可以访问的话，需要把localhost修改为0.0.0.0
# 同时在settings.py中设置ALLOWED_HOSTS添加本机IP。


# 让 Django 知道我们的模型有一些变更，自动创建数据库表：
# 该 makemigrations 命令查找所有可用的models，为任意一个在数据库中不存在对应数据表的model创建 migrations 脚本文件。
# migrate 命令则运行这些 migrations 自动创建数据库表。
python manage.py makemigrations TestModel 
python manage.py makemigrations
python manage.py migrate

# 创建表结构
python manage.py migrate 
# 或者
python manage.py migrate TestModel

```